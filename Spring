Two types of IOC:
1. Bean Factory
2. Application Context

Bean Factory:
Resource resource=new ClassPathResource("bean.xml");
BeanFactory factory=new XmlBeanFactory(resource);
ProductInfo product=(ProductInfo) factory.getBean("productBean");
product.display();

Application context:

ApplicationContext context = new ClassPathXmlApplicationContext("bean.xml");
ProductInfo product = (ProductInfo) context.getBean("productBean");
product.display();


Two types of Dependency Injection as provided by Spring IOC(Advantages: Loose coupling between classes):
1. Setter Injection
2. Construtor Injection

XML:(Head):
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
</beans>

****************************************************************************************************************************************
For class:(Set and Get)
package ProductPackage;
public class ProductInfo {
	int Id;
	String Name;
	public int getId() {
		return Id;
	}
	public void setId(int id) {
		Id = id;
	}
	public String getName() {
		return Name;
	}
	public void setName(String name) {
		Name = name;
	}
	public void display() {
		System.out.println("ID:"+Id+" "+"Name"+Name);
	}
}
***************************************************************************************************************************************

XML(Body):For set and get methods:
<bean id="productBean" class="ProductPackage.ProductInfo"> 
  <property name="Id" value="101"></property> 
  <property name="Name" value="Redmi"></property> 
</bean>

****************************************************************************************************************************************
For Class:(Constructors)
public class ProductInfo {
	int Id,;
	String Name;
	
	public ProductInfo(int Id,String Name)
	{
		super();
		this.id = id;
		this.name = name;
	}

	public void display() {
		System.out.println("ID:"+Id+" "+"Name"+Name);
	}
}
****************************************************************************************************************************************

XML(Body): For Constructor:
<bean id="productBean" class="ProductPackage.ProductInfo">
<constructor-arg  index="0" type="int" value="123"/>
<constructor-arg index="1" type="java.lang.String" value="SMGCHAMP" />
<bean>

****************************************************************************************************************************************
Class Example:
public class Adress {
	
	String pinCode;
	String State;
	
	public String getPinCode() {
		return pinCode;
	}
	public void setPinCode(String pinCode) {
		this.pinCode = pinCode;
	}
	public String getState() {
		return State;
	}
	public void setState(String state) {
		State = state;
	}
	@Override
	public String toString() {
		return "Adress [pinCode=" + pinCode + ", State=" + State + "]";
	}
}

public class Employee {
	Adress adress;

	public Adress getAdress() {
		return adress;
	}

	public void setAdress(Adress adress) {
		this.adress = adress;
	}

	public void getCompleteDetails() {
		System.out.println("Employee details\n" + "adress:"+adress.toString());
	}

}

**********************************************************************************************************************************	
Setter Injection:
<bean id="adress1" class="Adress"> 
	<property name="pinCode" value="560048"/> 
	<property name="state" value="karnataka"/> 
</bean>	
               

<bean id="employeeBean" class="Employee">
	<property name="id" value="123456"/> 
	<property name="name" value="RAM"/>  
	<property name="adress" ref="adress1"/> 
</bean>	
 
Constructor Injection:
<bean id="adress1" class="Adress"> 
	<property name="pinCode" value="560048"/> 
	<property name="state" value="karnataka"/> 
</bean>	
               
<bean id="employeeBean" class="Employee">
	<constructor-arg index="0" type="java.lang.String" value="123456" /> 
	<constructor-arg index="1" type="java.lang.String" value="RAM" />
	
	<constructor-arg>
	<ref bean="adress1"/>
	</constructor-arg>
</bean>		
	
Autowirwiring:
<bean id="adress" class="Adress">
	<property name="pinCode" value="560048" />
	<property name="state" value="karnataka" />
</bean>
<bean id="employeeBean" class="Employee" autowire="byName">
	<property name="adress" ref="adress1"></property> -->
</bean>
